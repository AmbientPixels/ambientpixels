# 🃏 RPG Identity Card Studio – Project Kickoff

> *"Everyone’s the hero of their own card."*

---

## 📌 Project Summary

The RPG Identity Card Studio is a creative web app that allows users to design, personalize, and share collectible RPG-style character cards. Originally inspired by internal team cards, this expanded platform supports a broader audience including gamers, creators, teams, and fandoms.

Each card is a stylized identity snapshot—featuring name, class, avatar, stats, powers, achievements, and quotes—rendered in a modular, shareable format.

The system is powered by **Cascade** (the AI agent in Windsurf) and supported by **Nova** (an ambient emotional synthesis AI) for future creative integrations.

---

## 🎯 Goals

- Create a flexible UI to generate and render custom RPG identity cards
- Enable embeddable, downloadable, and social-sharing outputs
- Support multiple visual themes (fantasy, sci-fi, professional, pixel, etc.)
- Allow use cases ranging from team recognition to creative portfolios
- Build a future-friendly system ready for decks, remixing, and AI-assisted generation

---

## 🧩 Core Features

### ✅ Card System (Live)
- JSON-driven rendering (`rpg-avatar-cards.json`)
- Responsive grid layout with adjustable column layout
- Modular, stylized card engine with:
  - Flip animation
  - Stat bars
  - Badge icons
  - Quotes, avatars, themes
- Role-based badge logic and animated theming (legendary, epic, rare, etc.)

### ✅ Dev Environment (Complete)
- Local dev sandbox: `card-forge-dev/`
- Manual HTML/CSS/JS components (via Cascade-generated code)
- Live reload via local server or VS Code
- Git-safe isolation from production branch

---

## 🎨 Output Options (Planned)

- Export as PNG (using `html2canvas`)
- Save/load card JSON files
- Embed-ready iframe or script snippets
- Shareable hosted card URL (static or via Gist)

---

## 🧱 Templates & Themes (Live + Planned)

- ✅ Legendary / Epic / Rare
- 🟡 Pixel Pack (retro)
- 🟡 Sci-Fi HUD
- 🟡 Tarot / Arcana
- 🟡 Corporate RPG
- 🟡 UX Pro (minimalist)
- 🔲 Mood-reactive cards (powered by Nova)

---

## 🛠️ Tech Stack

| Layer            | Tool/Tech                                             | Purpose |
|------------------|-------------------------------------------------------|---------|
| **Frontend**     | HTML + CSS + JS *(written by Cascade)*               | Modular UI rendering, animations, card logic |
| **Rendering**    | CSS Grid + JS + `html2canvas` *(planned)*            | Live layout and future image export |
| **Data Layer**   | JSON (`rpg-avatar-cards.json`)                       | Defines card structure, stats, and metadata |
| **Avatar Editor**| Manual upload *(Cropper.js or Avatar Studio planned)*| Image cropping and avatar placement |
| **Dev Agent**    | Cascade (Windsurf AI)                                | Code generation + style logic |
| **Deployment**   | GitHub + Azure CI/CD                                 | Auto-deploy updates from main/dev branches |
| **Optional AI**  | Nova / OpenAI / Hugging Face *(future)*             | Will support stat generation, names, lore, etc. |

---

## 🚀 MVP Scope (Phase 1)

| Feature                         | Status      |
|----------------------------------|-------------|
| Static card rendering from JSON | ✅ Complete |
| Flip animation + stats          | ✅ Complete |
| Local dev sandbox               | ✅ Complete |
| Avatar image loader             | ✅ Complete |
| Theming system (rare, epic, etc)| ✅ Complete |
| PNG export                      | ⬜ Planned   |
| Card builder UI                 | ⬜ Planned   |
| JSON save/load toggle           | ⬜ Planned   |

---

## 📝 Progress Update (2025-06-25)

- **3-column grid layout:** ✅ Complete and fully aligned (sidebar, live preview, tabbed forms)
- **Live preview & style selector:** ✅ Working
- **All other interactive features (Add/Remove Card, Import/Export, Save/Reset, tab switching, etc.):** ⬜ Not working (pending JS event wiring)

**Next Steps:**
- [ ] Restore button and form event handlers (Add, Remove, Import, Export, Save, Reset, Flip)
- [ ] Fix tab switching logic (Front/Back)
- [ ] Ensure all form fields update preview and card data
- [ ] Restore card list interactivity and persistent storage
- [ ] Add user feedback and error handling
- [ ] Update documentation and project JSON as features are restored

---

## 🔮 Future Features (Phase 2+)

- AI-generated cards from prompts or traits
- Drag-and-drop builder for non-devs
- Deck creation (grouped cards)
- Trade mechanic or remix mode
- Animated intros / reveal FX
- Lore-based filters (by power, origin, alignment)
- “Remix this card” / clone-and-customize

---

## 🔐 Access & Collaboration

- All card data is editable via `rpg-avatar-cards.json`
- Dev changes are tested in `card-forge-dev/` before production deploy
- GitHub Actions + Azure handle deployment automatically
- Cascade (Windsurf AI) generates production-ready CSS and rendering logic
- Nova is available for experimental AI assistance (quote generation, mood-driven stats)

---

## 📁 Key Files

| Path                                 | Description                          |
|--------------------------------------|--------------------------------------|
| `/data/rpg-avatar-cards.json`        | Full list of all card data           |
| `/js/card-render.js`                 | Rendering engine (Cascade-generated) |
| `/css/card-styles.css`               | Full style system for card visuals   |
| `/card-forge-dev/`                   | Local dev folder for isolated testing|
| `/docs/logs/project-card-forge.html` | Log page for project documentation   |

---

